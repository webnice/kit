package server

import (
	"io"
	"net/http"

	"github.com/webnice/dic"
	"github.com/webnice/web/v3"
)

// WebMiddlewareFn Функция "промежуточного слоя" программного обеспечения ВЕБ сервера.
type WebMiddlewareFn func(next http.Handler) http.Handler

// WebEventFn Функция события изменения состояния сервера.
type WebEventFn func(*Server) error

// WebMatcherFn Функция определения готов ли контроллер обработать запрос.
// Используется в режиме мультиплексора, когда контроллер выбирается на основе заголовка или типа контента запроса,
// пример: создание сервера обрабатывающего и HTTP/REST FULL запросы и GRPC запросы.
// Возвращается "истина", если контроллер готов обработать запрос.
type WebMatcherFn func(io.Reader) bool

// WebResource Интерфейс регистрации контроллера ресурса сервера.
type WebResource interface {
	// Resource Описание ресурса.
	Resource() *Web
}

// Web Описание ресурса WEB сервера.
type Web struct {
	// Middleware Промежуточный слой (middleware), подключаются к базовому пути, действуют для всех контроллеров
	// подключаемых к тому же базовому пути.
	// Если базовый путь указан пустым, тогда промежуточный слой относятся не к контроллеру, а к серверу целиком
	// и подключаются до начала настройки роутинга.
	// Может быть пустым срезом.
	Middleware []WebMiddlewareFn

	// Path Базовый путь URN, обрабатываемый ресурсом.
	// Пример: /api/v1.0
	// Для контроллеров не может быть пустым, URN должен начинаться со слэша.
	// Если указан пустой путь, тогда контроллеры игнорируются, подключается только "промежуточный слой" к серверу
	// целиком, до начала настройки роутинга.
	Path string

	// Controller Контроллеры ресурса.
	// Может быть пустым срезом.
	Controller []WebController

	// Before Функция вызывается после готовности приложения к запуску, до начала настройки сервера и ресурсов сервера.
	// Если функция возвращает ошибку, тогда настройка ресурса прерывается.
	// Если функция не установлена, равна nil, функция не вызывается.
	Before WebEventFn
}

// WebController Описание контроллера.
type WebController struct {
	// Middleware Промежуточный слой (middleware), подключаемое к указанному пути URN.
	// Может быть пустым срезом.
	Middleware []WebMiddlewareFn

	// Путь URN, обрабатываемый контроллером.
	// Не может быть пустым, URN должен начинаться с '/'.
	Path string

	// Method Метод запроса.
	// Если указан пустой срез - все методы запросов.
	// Может быть пустым срезом.
	Method []dic.IMethod

	// Matcher Функция возвращает "истина" для запросов которые контроллер готов обработать.
	// Используется в режиме мультиплексора, когда контроллер выбирается на основе заголовка или типа контента запроса,
	// пример: создание сервера обрабатывающего и HTTP/REST FULL запросы и GRPC запросы.
	// Если функция не установлена - равна nil, функция не вызывается.
	Matcher WebMatcherFn

	// Controller Контроллер, выполняющий обработку запросов к данному пути.
	// Функция обязательно должна быть обязательно определена, не может равняться nil.
	Controller http.HandlerFunc
}

// WebServerControl Описание выполняющегося ВЕБ сервера, его конфигурация и интерфейс контроля.
type WebServerControl struct {
	Server        web.Interface // Интерфейс управления ВЕБ сервером.
	Configuration *Server       // Ссылка на конфигурацию сервера.
}
