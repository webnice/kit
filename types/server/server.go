package server

import (
	"io"
	"net/http"

	kitModuleUuid "github.com/webnice/kit/v4/module/uuid"
)

// Server Структура с информацией о сервере.
type Server struct {
	ID   kitModuleUuid.UUID // Уникальный UUID идентификатор сервера.
	Type Type               // Тип сервера, web, grpc, tcp и т.п.
	Web  *WebConfiguration  // Конфигурация веб сервера.
}

// WebMiddlewareFn Функция промежуточного программного обеспечения ВЕБ сервера.
type WebMiddlewareFn func(next http.HandlerFunc) http.HandlerFunc

// MatcherFn Функция определения готов ли контроллер обработать запрос.
// Используется в режиме мультиплексора, когда контроллер выбирается на основе заголовка или типа контента запроса,
// пример: создание сервера обрабатывающего и HTTP/REST FULL запросы и GRPC запросы.
// Возвращается "истина", если контроллер готов обработать запрос.
type MatcherFn func(io.Reader) bool

// WebEventFn Функция события изменения состояния сервера.
type WebEventFn func(*Server) error

// Web Описание ресурса WEB сервера.
type Web struct {
	// Middleware Промежуточное программное обеспечение (middleware), подключаются к базовому пути,
	// действуют для всех контроллеров.
	// Может быть пустым срезом.
	Middleware []WebMiddlewareFn

	// Path Базовый путь URN, обрабатываемый ресурсом.
	// Пример: /api/v1.0
	// Не может быть пустым, URN должен начинаться со слэша.
	Path string

	// Controller Контроллеры. Если не определён ни один контроллер, весь ресурс и все middleware игнорируются
	// без возвращения ошибки при регистрации ресурса.
	// Может быть пустым срезом.
	Controller []WebController

	// Before Функция вызывается после готовности приложения к запуску, до начала настройки сервера и ресурсов сервера.
	// Если функция возвращает ошибку, тогда настройка ресурса прерывается.
	// Функция может быть не определена, равна nil.
	Before WebEventFn
}

// WebController Описание контроллера.
type WebController struct {
	// Middleware Промежуточное программное обеспечение (middleware), подключаемое к данному пути.
	// Может быть пустым срезом.
	Middleware []WebMiddlewareFn

	// Путь URN, обрабатываемый контроллером.
	// Не может быть пустым, URN должен начинаться со слэша.
	Path string

	// Method Метод запроса. Пустой массив для всех типов запросов.
	// Может быть пустым срезом.
	Method []string

	// Matcher Функция возвращает "истина" для запросов которые контроллер готов обработать.
	// Используется в режиме мультиплексора, когда контроллер выбирается на основе заголовка или типа контента запроса,
	// пример: создание сервера обрабатывающего и HTTP/REST FULL запросы и GRPC запросы.
	// Если функция не установлена, равна nil, функционал не используется.
	// Может быть равен nil.
	Matcher MatcherFn

	// Controller Контроллер, выполняющий обработку запросов к данному пути.
	// Функция обязательно должна быть определена, не может равняться nil.
	Controller http.HandlerFunc
}

// Grpc Описание ресурса GRPC сервера.
type Grpc struct {

	// TODO: С первым GRPC сервером расписать тип данных.

}

// Tcp Описание ресурса TCP/IP сервера.
type Tcp struct {
}

// Udp Описание ресурса UDP сервера.
type Udp struct {
}
